#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    mode                    http
    option                  httplog
    option                  dontlognull
    option http-server-close
    option redispatch
    option forwardfor       except 127.0.0.0/8
    retries                 3
    maxconn                 20000
    timeout http-request    10000ms
    timeout http-keep-alive 10000ms
    timeout check           10000ms
    timeout connect         40000ms
    timeout client          300000ms
    timeout server          300000ms
    timeout queue           50000ms

#---------------------------------------------------------------------

listen stats
    bind :9000
    stats uri /stats
    stats refresh 10000ms


frontend openshift-api-server
    bind :6443
    default_backend openshift-api-server
    mode tcp

backend openshift-api-server
    mode tcp
    balance source
    server {{ bootstrap.name | lower }} {{ bootstrap.ipaddr }}:6443 check
{% for m in masters %} 
    server {{ m.name | lower }} {{ m.ipaddr }}:6443 check
{% endfor %}
    
frontend machine-config-server
    mode tcp
    bind :22623
    default_backend machine-config-server

backend machine-config-server
    mode tcp
    balance source
    server {{ bootstrap.name | lower }} {{ bootstrap.ipaddr }}:22623 check
{% for m in masters %}
    server {{ m.name | lower }} {{ m.ipaddr }}:22623 check
{% endfor %}
  
frontend ingress-http
    bind :80
    default_backend ingress-http
    mode tcp

backend ingress-http
    balance source
    mode tcp
{% if workers is defined %}
{% for w in workers %}
    server {{ w.name | lower }} {{ w.ipaddr }}:80 check
{% endfor %}
{% else %}
{% for m in masters %}
    server {{ m.name | lower }} {{ m.ipaddr }}:80 check
{% endfor %}
{% endif %}
   
frontend ingress-https
    bind *:443
    default_backend ingress-https
    mode tcp

backend ingress-https 
    mode tcp
    balance source
{% if workers is defined %}
{% for w in workers %}
    server {{ w.name | lower }} {{ w.ipaddr }}:443 check
{% endfor %}
{% else %}
{% for m in masters %}
    server {{ m.name | lower }} {{ m.ipaddr }}:443 check
{% endfor %}
{% endif %}

#---------------------------------------------------------------------
