---
# tasks file to configure a bind dns
- hosts: all
  vars_files:
    - ../vars/cluster-network-config.yml 
  handlers:
  - import_tasks: ../handlers/dns-handlers.yml
  
  tasks:
  - name: Define facts for dns conf
    include: set_facts/dns-facts.yml
  
  - name: Install packages from facts
    package:
      name: "{{ packages }}"
      state: present
      
  - name: Create named file
    template:
      src: ../templates/named.conf.j2
      dest: /etc/named.conf
    notify:
      - restart bind

  - name: Generate DNS serial number
    copy:
      src: ../files/set-dns-serial.sh
      dest: /usr/local/bin/set-dns-serial.sh
      mode: '0555'

  - name: Set your zone serial number
    shell: "/usr/local/bin/set-dns-serial.sh"
    register: dymanicserialnumber

  - name: Set serial number as a fact
    set_fact:
      serialnumber: "{{ dymanicserialnumber.stdout }}"

  - name: Create the zone file for your domain "{{ dns.domain | lower }}" 
    template:
      src: ../templates/zonefile.j2
      dest: /var/named/zonefile.db
      mode: '0644'
    notify:
      - restart bind

  - name: Create the required reverse zone file
    template:
      src: ../templates/reverse.j2
      dest: /var/named/reverse.db
      mode: '0644'
    notify:
      - restart bind
  
  - name: Starting services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - "{{ services }}"
  
  - name: Set the local resolv.conf file
    template:
      src: ../templates/resolv.conf.j2
      dest: /etc/resolv.conf

  - name: Get network device system name from facts
    shell: "nmcli -t dev show {{ networkifacename }} | grep GENERAL.CONNECTION | cut -d: -f2"
    register: devicesystemname

  - name: Setting network device system name as a fact
    set_fact:
      dsname: "{{ devicesystemname.stdout }}"

  - name: Restart NetworkManager
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - NetworkManager
...