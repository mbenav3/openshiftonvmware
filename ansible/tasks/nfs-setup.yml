---
- hosts: all
  vars_files:
    - ../vars/nfs-svcs-ports.yml 
    - ../vars/nfs-config.yml 
  handlers:
    - import_tasks: ../handlers/nfs-handlers.yml

  tasks:
    - name: Define facts for the nfs server
      include: set_facts/nfs-facts.yml
      
    - name: Install the nfs package as defined in facts
      package:
        name: "{{ packages }}"
        state: present

    - name: Create NFS export directory
      file:
        path: "{{ nfs_path }}"
        state: directory
        mode: 0777
        owner: "{{ nfs_owner }}"
        group: "{{ nfs_group }}"
      notify:
        - restart nfs
      
    - name: Copying over nfs-exports file
      template:
        src: ../templates/nfs-exports.conf.j2
        dest: "/etc/exports"
        owner: root
        group: root
        mode: 0666
  
    - name: Copying over nfs-provisioner rbac
      copy:
        src: ../files/nfs-provisioner-rbac.yaml
        dest: /usr/local/src/nfs-provisioner-rbac.yaml
        owner: root
        group: root
        mode: 0666

    - name: Copying over nfs-provisioner deployment
      template:
        src: ../templates/nfs-provisioner-deployment.yaml.j2
        dest: /usr/local/src/nfs-provisioner-deployment.yaml
        owner: root
        group: root
        mode: 0666

    - name: Copying over nfs-provisioner storageclass
      copy:
        src: ../files/nfs-provisioner-sc.yaml
        dest: /usr/local/src/nfs-provisioner-sc.yaml
        owner: root
        group: root
        mode: 0666

    - name: Copying over nfs-provisioner setup script
      copy:
        src: ../files/nfs-provisioner-setup.sh
        dest: /usr/local/bin/nfs-provisioner-setup.sh
        owner: root
        group: root
        mode: 0555

    - name: Enable the nfs service
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      with_items:
        - "{{ services_start }}"

    - name: Update the firewall config allowing communication through the required SERVICES
      firewalld:
        permanent: yes
        immediate: yes
        state: enabled
        service: "{{ item[0].service }}"
        zone: "{{ item[0].zone }}"
      delegate_to: "{{ item[1] }}"
      run_once: true
      with_nested:
        - "{{ allow_services }}"
        - "{{ ansible_play_batch }}"

    - name: reload service firewalld
      systemd:
        name: firewalld
        state: reloaded
